{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/Demo.vue","webpack:///./src/engine/misc/vector.js","webpack:///./src/engine/misc/demos/vector.js","webpack:///./src/engine/misc/helpers.js","webpack:///./src/engine/misc/demos/helpers.js","webpack:///./src/engine/misc/graphics.js","webpack:///./src/engine/misc/demos/graphics.js","webpack:///./src/engine/misc/factory.js","webpack:///./src/engine/misc/demos/factory.js","webpack:///./src/engine/nodes/crochetNode.js","webpack:///./src/engine/nodes/crochetNodeOrigin.js","webpack:///./src/engine/nodes/crochetNodeStart.js","webpack:///./src/engine/nodes/crochetNodeFinish.js","webpack:///./src/engine/nodes/crochetNodeLoop.js","webpack:///./src/engine/nodes/crochetNodeHook.js","webpack:///./src/engine/nodes/crochetNodeStruct.js","webpack:///./src/engine/nodes/crochetNodeCHSpaceStart.js","webpack:///./src/engine/nodes/crochetNodeCHSpaceCont.js","webpack:///./src/engine/nodes/demos/crochetNode.js","webpack:///./src/engine/links/crochetLink.js","webpack:///./src/engine/links/crochetLinkExternal.js","webpack:///./src/engine/links/crochetLinkSequential.js","webpack:///./src/engine/links/crochetLinkZero.js","webpack:///./src/engine/links/crochetLinkCHSpace.js","webpack:///./src/engine/links/demos/crochetLink.js","webpack:///./src/engine/links/crochetDraw.js","webpack:///./src/engine/links/demos/crochetDraw.js","webpack:///./src/engine/stitches/operations/operationSubject.js","webpack:///./src/engine/nodes/nodeFactory.js","webpack:///./src/engine/links/linkFactory.js","webpack:///./src/engine/stitches/operations/crochetOperation.js","webpack:///./src/engine/stitches/operations/crochetOperationMakeOrigin.js","webpack:///./src/engine/stitches/operations/crochetOperationBasic.js","webpack:///./src/engine/stitches/operations/crochetOperationCopy.js","webpack:///./src/engine/stitches/operations/crochetOperationMove.js","webpack:///./src/engine/stitches/operations/crochetOperationMerge.js","webpack:///./src/engine/stitches/operations/operationFactory.js","webpack:///./src/engine/stitches/operations/demos/operations.js","webpack:///./src/engine/stitches/crochetStitch.js","webpack:///./src/engine/stitches/crochetStitchOrigin.js","webpack:///./src/engine/stitches/crochetStitchChain.js","webpack:///./src/engine/stitches/crochetStitchSingle.js","webpack:///./src/engine/stitches/crochetStitchDouble.js","webpack:///./src/engine/stitches/crochetStitchSlip.js","webpack:///./src/engine/stitches/stitchFactory.js","webpack:///./src/engine/stitches/demos/stitchFactory.js","webpack:///./src/Demo.vue?a71b","webpack:///./src/demo.js","webpack:///./src/Demo.vue?d109","webpack:///./src/registerServiceWorker.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","log","e","Vec2d","tmpX","tmpY","arguments","Array","Error","this","_x","_y","toFixed","getTxt","v","constructor","isNaN","add","scale","now","len","Math","sqrt","dot","phi","cos","sin","newX","newY","sgn","unit","turnl","turnr","NaN","PI","atan2","vectors","res","a","from","reduce","prev","curr","vectorDemo","v1","v2","v3","getArray","IdGenerator","prefix","index","helperDemo","next","TransformationTwoVector","args","clean","filter","vAbs","vPerc","base","rot","basePhi","u","baseLen","GraphCommand","cmd","params","Plotter","to","start","sub","baseOrigin","numPts","vecArr","dPoints","map","join","dCmd","func","SVGpathResetPen","SVGpathArc","SVGpathGeneric","sourceVec","targetVec","pathDef","getBase","path","pathSteps","pathCommand","calcPathPoint","allowedCommands","mappedCmd","funcs","pathStepParts","SVGpathCommandFactory","graphicsDemo","abs","perc","pt","tv","tv1","tv2","tv3","gc1","gc2","gc3","gc4","getPathTxt","Map","FactoryClass","exampleClass","argumentNames","className","getTypeFunc","items","registerClass","newClass","set","error","type","Cls","rest","has","factoryDemo","x","n1","getClass","getNewObject","n2","n3","n4","CrochetNode","argContext","argCoordinates","COUNTER","_context","y","fx","fy","_out_neighbors","_in_neighbors","id","getType","getDesc","isLoopable","getColor","undefined","_to_neighbors","newLink","source","target","oldLink","delete","dir","links","forEach","val","nodes","size","CrochetNodeOrigin","CrochetNodeStart","CrochetNodeFinish","CrochetNodeLoop","CrochetNodeHook","CrochetNodeStruct","CrochetNodeCHSpaceStart","CrochetNodeCHSpaceCont","crocehtNodeDemo","getVector","getNeighborCount","l1","l2","registerNeighbor","getNeighborNodes","getNeighborLinks","toString","CrochetLink","context","fromNode","toNode","is_deleted","_length","getDefLen","isPrintable","unRegisterNeighbor","node","withEnds","concat","oldNode","newNode","CrochetLinkExternal","CrochetLinkSequential","CrochetLinkZero","CrochetLinkCHSpace","crochetLinkDemo","getOtherEnd","CrochetDraw","setNewPath","getPathDef","pahtDefString","pathCmds","tokenizeDrawingCommands","pathDefVectors","parseDrawingCmds","pathStr","commands","split","trim","match","commandRegEx","tokenized","token","tokenizedCommands","parsedCmds","paramTwoVectors","param","twoVecArray","reverse","f","g","h","parseFloat","crochetDrawDemo","command","twovector","OperationSubject","needle","stitch","otherLoops","needleStack","contextStitch","crochetNodeFactory","crochetLinkFactory","CrochetOperation","subject","cmds","minParams","getCommandName","newSubject","delNode","delLink","getBasicResult","CrochetOperationMakeOrigin","copy","nodeFactory","CrochetOperationBasic","newLinkType","newNodeType","sourceNode","pop","newPos","CALC_DEF_NEW_POS","linkFactory","byLinkType","neighbors","neighborVecs","avgNeighborVec","SUM","delta","CrochetOperationCopy","tmp","CrochetOperationMove","CrochetOperationMerge","targetNode","deletedLink","newPosition","setVector","linksToTransfer","existingNeighbors","includes","replaceNode","crochetOperationFactory","crochetOperationDemo","st","exec","z1","s1","s2","s3","t1","t2","ls1","ls2","ls3","lt1","lt2","lt3","CrochetStitch","attachToNode","_nodes","_links","requiresPrevious","loops","requiredLoops","seq","getSequence","instr","tokens","action","op","apoptose","_id","nodeType","keys","linkType","getNodes","getStartNode","getContext","getEndNode","wrkNode","sameStitch","nextStchs","currentLoop","forceProgress","cont","CrochetStitchOrigin","CrochetStitchChain","CrochetStitchSingle","CrochetStitchDouble","CrochetStitchSlip","crochetStitchFactory","crochetStitchDemo","getLinks","getLastLoop","getFirstLoop","header","graphics","components","render","createApp","Demo","mount","register","process","ready","console","registered","cached","updatefound","updated","offline"],"mappings":"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","file":"js/demo.58f652aa.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"demo\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([1,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","<template>\n  <div>\n    <pre\n      v-for=\"(e, i) in log\"\n      :key=\"i\"\n    >{{ e }}</pre>\n  </div>\n</template>\n\n<script>\n\nimport vectorDemo from './engine/misc/demos/vector.js'\nimport helperDemo from './engine/misc/demos/helpers.js'\nimport graphicsDemo from './engine/misc/demos/graphics.js'\nimport factoryDemo from './engine/misc/demos/factory.js'\nimport crochetNodeDemo from './engine/nodes/demos/crochetNode.js'\nimport crochetLinkDemo from './engine/links/demos/crochetLink.js'\nimport crochetDrawDemo from './engine/links/demos/crochetDraw.js'\nimport crochetOperationDemo from './engine/stitches/operations/demos/operations.js'\nimport crochetStitchDemo from './engine/stitches/demos/stitchFactory.js'\n\nconst l = []\n\nfunction log (a) {\n  l.push(`> ${a}`)\n}\n\nfunction header (a) {\n  l.push(`\\n*** ${a} ***\\n\\n`)\n}\n\nheader('Ved2d demo')\nvectorDemo(log)\nheader('idGenerator demo')\nhelperDemo(log)\nheader('graphics demo')\ngraphicsDemo(log)\nheader('factory demo')\nfactoryDemo(log)\nheader('NODE demo')\ncrochetNodeDemo(log)\nheader('LINK demo')\ncrochetLinkDemo(log)\nheader('DRAW LINK demo')\ncrochetDrawDemo(log)\nheader('crochet operation demo')\ncrochetOperationDemo(log)\nheader('STITCH demo')\ncrochetStitchDemo(log)\n\nexport default {\n  name: 'Demo',\n  components: {\n    // HelloWorld\n  },\n  data () {\n    return {\n      log: l\n    }\n  }\n}\n</script>\n\n<style>\n#app {\n}\npre {margin: 0px}\n</style>\n","class Vec2d {\n  constructor () {\n    // var argLen = arguments.length;\n    var tmpX, tmpY\n\n    // 1st. argument an array => construct the vector given an array of coordinates\n    if (arguments[0] instanceof Array) {\n      if (arguments[0].length < 2) throw new Error('Not enough coordinates in array')\n      tmpX = arguments[0][0]\n      tmpY = arguments[0][1]\n      // 1st. arg. not an array => each arg a coordiante\n    } else {\n      if (arguments.length < 2) throw new Error('Not enough coordinates')\n      tmpX = arguments[0]\n      tmpY = arguments[1]\n    };\n\n    if (typeof tmpX !== 'number' || typeof tmpY !== 'number') throw new Error('both coordinates must be numbers!')\n    this._x = tmpX\n    this._y = tmpY\n  };\n\n  getTxt (r = 0) { return this._x.toFixed(r) + ',' + this._y.toFixed(r) }\n\n  toString () { return '[Vector (' + this.getTxt() + ')]' }\n\n  getArray () { return [this._x, this._y] }\n\n  add (v) {\n    if (!(v instanceof Vec2d)) throw new Error('add(v) : v must be a vec2d')\n    return new this.constructor(this._x + v._x, this._y + v._y)\n  }\n\n  scale (s) { // dot product\n    if (typeof s !== 'number' || isNaN(s)) throw new Error('scale(s) : s must be a number')\n    return new this.constructor(this._x * s, this._y * s)\n  }\n\n  sub (v) {\n    if (!(v instanceof Vec2d)) throw new Error('sub(v) : v must be a vec2d')\n    return this.add(v.scale(-1))\n  }\n\n  dot (v) { // dot product\n    if (!(v instanceof Vec2d)) throw new Error('dot(v) : v must be a vec2d')\n    return (this._x * v._x + this._y * v._y)\n  }\n\n  xprod (v) { // z of the (would be 3D) tensor multiplication, if input z = const(0)\n    if (!(v instanceof Vec2d)) throw new Error('xprod(v) : v must be a vec2d')\n    return (this._x * v._y - this._y * v._x)\n  }\n\n  len (e) { //  length of the vector\n    if (typeof e === 'number') {\n      const now = this.len()\n      if (now === 0) {\n        return new Vec2d(0, 0)\n      } else {\n        return this.scale(e / now)\n      }\n    } else {\n      return Math.sqrt(this.dot(this))\n    }\n  }\n\n  rot (phi) { // rotate the vector by angle phi\n    if (typeof phi !== 'number' || isNaN(phi)) throw new Error('rot(phi) : phi must be a number')\n    const c = Math.cos(phi)\n    const s = Math.sin(phi)\n    const newX = this._x * c + this._y * s\n    const newY = -this._x * s + this._y * c\n    return new this.constructor(newX, newY)\n  }\n\n  turnr () {\n    return new this.constructor(-this._y, this._x)\n  }\n\n  turnl () {\n    return new this.constructor(this._y, -this._x)\n  }\n\n  unit () {\n    return this.scale(1 / this.len())\n  }\n\n  norm (sgn) {\n    return (sgn ? this.unit().turnl() : this.unit().turnr())\n  }\n\n  phi () {\n    // so that (1,0)->0, (0,-1)->PI/2, (-1,0)->PI, (0,1)->3*PI/2\n    return (this._x === 0 && this._y === 0) ? NaN : (Math.PI + Math.atan2(this._y, -this._x)) % (2 * Math.PI)\n  }\n\n  static SUM (vectors) {\n    const a = ((vectors instanceof Array) ? vectors : Array.from(arguments))\n    let res\n    try {\n      res = a.reduce((prev, curr) => prev.add(curr))\n    } catch {\n      throw new Error('vec2d.SUM : all elements must be vec2d')\n    }\n    return res\n  }\n}\n\nexport default Vec2d\n","import Vec2d from '../vector.js'\n\nfunction vectorDemo (log) {\n  const v1 = new Vec2d(0, 1)\n  const v2 = new Vec2d(2, 0)\n  log(`v1 : ${v1}`)\n  log(`v2 : ${v2}`)\n  const v3 = v1.add(v2)\n  log(`v1 as array : ${v1.getArray()}`)\n  log(`v1 + v2 : ${v3}`)\n}\n\nexport default vectorDemo\n","class IdGenerator {\n  constructor (prefix) {\n    this.prefix = prefix\n    this.index = 0\n  }\n\n  next () {\n    return this.prefix + '_' + this.index++\n  }\n}\n\nexport default IdGenerator\n","import IdGenerator from '../helpers.js'\n\nfunction helperDemo (log) {\n  const v1 = new IdGenerator('A')\n  const v2 = new IdGenerator('B')\n  log(`A : ${v1.next()}`)\n  log(`A : ${v1.next()}`)\n  log(`A : ${v1.next()}`)\n  log(`B : ${v2.next()}`)\n  log(`B : ${v2.next()}`)\n  log(`A : ${v1.next()}`)\n}\n\nexport default helperDemo\n","import Vec2d from './vector.js'\n\n// *** these classes are jsut to make sure that the objects we parse are of proper format ***\n\nclass TransformationTwoVector {\n  constructor () {\n    var args = Array.prototype.slice.call(arguments)\n    let clean = []\n    if (args.length === 1 && args[0] instanceof Array && args[0].length > 1) {\n      clean = args[0]\n    }\n    if (arguments.length > 1) {\n      clean = args\n    }\n    clean = clean.filter(e => (e instanceof Vec2d))\n    if (clean.length < 2) throw new Error('TransformationTwoVector : not enough vectors')\n    this.vAbs = clean[0]\n    this.vPerc = clean[1]\n  }\n\n  // given base parameters and two-vector parameter, returns the actual point to draw\n  calcPathPoint (base = new Vec2d(1, 0)) {\n    const v = this.vAbs.rot(base.basePhi)\n    const u = this.vPerc.scale(base.baseLen).rot(base.basePhi)\n    return v.add(u)\n  }\n}\n\nclass GraphCommand {\n  constructor (cmd, params) {\n    if (typeof (cmd) !== 'string') throw new Error('graphCommand : command must be a string')\n    if (!(params instanceof Array)) throw new Error('graphCommand : params must be an Array of TransformationTwoVector')\n    params = params.filter(e => (e instanceof TransformationTwoVector))\n    this.cmd = cmd\n    this.params = params\n  }\n}\n\nclass Plotter {\n  // *** some elementary geometry ***\n  // resets frame of reference for the link\n  // i.e. it's base vectors used in drawing path calculation\n  static getBase (from, to) {\n    const start = from\n    const v = to.sub(start)\n    // calc base vectors\n    let basePhi = v.phi()\n    if (isNaN(basePhi)) basePhi = 0\n    let baseLen = v.len()\n    if (baseLen < 1) baseLen = 1\n    return { baseOrigin: start, baseLen: baseLen, basePhi: basePhi }\n  }\n\n  // *** primitive SVG path (attr. d) command generators ****\n\n  // generates SVG path to move pen to links Source point\n  static SVGpathResetPen (base) {\n    return 'M ' + base.baseOrigin.getTxt()\n  }\n\n  // generate typical SVG command from several (Vec2d) points\n  static SVGpathGeneric (cmd, numPts, vecArr) {\n    if (vecArr.filter(e => (e instanceof Vec2d)).length < numPts) {\n      throw new Error(`getSVGcmd : not enough vectors in veec2Arr for command '${cmd}'. Expected ${numPts}`)\n    }\n    const dPoints = vecArr\n      .slice(0, numPts)\n      .filter(e => (e instanceof Vec2d))\n      .map(e => e.getTxt())\n      .join(' ')\n    return `${cmd} ${dPoints}`\n  }\n\n  static SVGpathArc (vecArr, base) {\n    if (vecArr.filter(e => (e instanceof Vec2d)).length < 4) {\n      throw new Error('getSVGcmd : not enough vectors in vecArr for command \\'a\\'. Expected 4')\n    }\n    let dCmd = 'a '\n    dCmd += vecArr[0].rot(-base.basePhi).getTxt() + ' ' // arc radii\n    dCmd += (-vecArr[1].phi() / Math.PI * 180) + ' ' // arc major axis rotation\n    dCmd += vecArr[2]._x + ' ' + vecArr[2]._y + ' ' // arc draw flags\n    dCmd += vecArr[3].getTxt() // arc end\n    return dCmd\n  }\n\n  static SVGpathCommandFactory (func, cmd, numPts, base, vecArr) {\n    switch (func) {\n      case 'reset' : return Plotter.SVGpathResetPen(base)\n      case 'arc' : return Plotter.SVGpathArc(vecArr, base)\n      case 'generic' : return Plotter.SVGpathGeneric(cmd, numPts, vecArr)\n      default : return ''\n    }\n  }\n\n  // allowed commands (and their setup) that can be translated into 'd' attribute for SVG path\n  // numPts: how many twoVectors are needed\n  // mapped : what the rendered command (might) be\n  // funcs : which functions should convert twoVectors to SVG 'd' commands\n  static allowedCommands = new Map([\n    ['M', { numPts: 1, mappedCmd: 'm', funcs: ['reset', 'generic'] }],\n    ['m', { numPts: 1, mappedCmd: 'm', funcs: ['generic'] }],\n    ['L', { numPts: 1, mappedCmd: 'l', funcs: ['reset', 'generic'] }],\n    ['l', { numPts: 1, mappedCmd: 'l', funcs: ['generic'] }],\n    ['Q', { numPts: 3, mappedCmd: 'q', funcs: ['reset', 'generic'] }],\n    ['q', { numPts: 3, mappedCmd: 'q', funcs: ['generic'] }],\n    ['T', { numPts: 3, mappedCmd: 't', funcs: ['reset', 'generic'] }],\n    ['t', { numPts: 3, mappedCmd: 'l', funcs: ['generic'] }],\n    ['C', { numPts: 3, mappedCmd: 'c', funcs: ['reset', 'generic'] }],\n    ['c', { numPts: 3, mappedCmd: 'c', funcs: ['generic'] }],\n    ['a', { numPts: 4, mappedCmd: ' ', funcs: ['arc'] }]\n  ])\n\n  // *** combine everything together ***\n\n  // having the tokenized path drawing commands and links start and end,\n  // generate the applicable SVG path to be drawn\n  static getPathTxt (sourceVec, targetVec, pathDef) {\n    if (!(sourceVec instanceof Vec2d)) throw new Error('getPathTxt : sourceVec must be a Vec2d vector')\n    if (!(targetVec instanceof Vec2d)) throw new Error('getPathTxt : targetVec must be a Vec2d vector')\n    if (!(pathDef instanceof Array)) throw new Error('pathDef : targetVec must be an Array of [graphCommand]')\n    pathDef = pathDef.filter(e => (e instanceof GraphCommand))\n\n    // establish frame of reference\n    const base = Plotter.getBase(sourceVec, targetVec)\n    // * parse the command *\n    // start by moving to link source\n    let path = Plotter.SVGpathResetPen(base)\n    // parse each path command\n    const pathSteps = pathDef.map(pathCommand => {\n      const vectors = pathCommand.params.map(\n        e => e.calcPathPoint(base)\n      )\n      const { numPts, mappedCmd, funcs } = Plotter.allowedCommands.get(pathCommand.cmd)\n      const pathStepParts = funcs.map(\n        e => Plotter.SVGpathCommandFactory(\n          e,\n          mappedCmd,\n          numPts,\n          base,\n          vectors\n        )\n      )\n      return pathStepParts.join(' ')\n    })\n    path += ' ' + pathSteps.join(' ')\n    return path\n  }\n}\n\nexport { TransformationTwoVector, GraphCommand, Plotter }\n","import { Plotter, TransformationTwoVector, GraphCommand } from '../graphics.js'\nimport Vec2d from '../vector.js'\n\nfunction graphicsDemo (log) {\n  let base = Plotter.getBase(new Vec2d(1, 1), new Vec2d(-1, 1))\n  log(base.baseOrigin)\n  log(base.baseLen)\n  log(base.basePhi)\n\n  base = Plotter.getBase(new Vec2d(1, 1), new Vec2d(11, 1))\n  const abs = new Vec2d(1, 5)\n  const perc = new Vec2d(0.2, 0.3)\n  const pt = new TransformationTwoVector(abs, perc).calcPathPoint(base)\n  log(pt)\n\n  log(Plotter.SVGpathResetPen(base))\n\n  const v1 = new Vec2d(1, 1)\n  const v2 = new Vec2d(2, 3)\n  const v3 = new Vec2d(-5, 4)\n\n  log(Plotter.SVGpathGeneric('c', 3, [v1, v2, v3]))\n\n  const tv = new TransformationTwoVector([new Vec2d(1, 1), new Vec2d(11, 1)])\n  log(tv.vAbs)\n\n  const tv1 = new TransformationTwoVector(new Vec2d(1, 1), new Vec2d(0, 0))\n  const tv2 = new TransformationTwoVector(new Vec2d(0, 0), new Vec2d(2, 3))\n  const tv3 = new TransformationTwoVector(new Vec2d(-5, 4), new Vec2d(7, -8))\n\n  const gc1 = new GraphCommand('l', [tv])\n  log(`${gc1.cmd} : [${gc1.params.length}]`)\n  const gc2 = new GraphCommand('M', [tv1])\n  const gc3 = new GraphCommand('q', [tv1, tv2, tv3])\n  const gc4 = new GraphCommand('a', [tv, tv1, tv2, tv3])\n\n  const d = Plotter.getPathTxt(new Vec2d(1, 1), new Vec2d(-1, 1), [gc1, gc2, gc3, gc4])\n  log(d)\n}\n\nexport default graphicsDemo\n","class FactoryClass {\n  constructor (exampleClass, func, argumentNames = []) {\n    this.className = exampleClass.name\n    if (typeof (exampleClass[func]) === 'function') {\n      this.getTypeFunc = func\n    } else {\n      throw new Error(`facotryCLass : class '${exampleClass.name}' does not have the method '${func}'`)\n    }\n    this.argumentNames = argumentNames\n    this.items = new Map()\n    this.registerClass(exampleClass)\n  }\n\n  registerClass (newClass) {\n    try {\n      this.items.set(newClass[this.getTypeFunc](), newClass)\n    } catch (error) {\n      throw new Error(`${this.className} factory : class ${newClass.name} must expose the '${this.getTypeFunc}' method`)\n    }\n    return this\n  }\n\n  getNewObject (type, ...rest) {\n    const Cls = this.items.get(type)\n    if (typeof Cls === 'undefined') throw new Error(`${this.className} factory : invalid ${this.className} type '${type}'`)\n    return new Cls(...rest)\n  }\n\n  getClass (type) {\n    const Cls = this.items.get(type)\n    if (typeof Cls === 'undefined') throw new Error(`${this.className} factory : invalid ${this.className} type '${type}'`)\n    return Cls\n  }\n\n  isValidType (type) {\n    return this.items.has(type)\n  }\n}\n\nexport default FactoryClass\n","import FactoryClass from '../factory.js'\n\nfunction factoryDemo (log) {\n  class n {static getType () { return 'x' }}\n  const x = new FactoryClass(n, 'getType')\n\n  class n1 {static getType () { return 'a' }}\n\n  x.registerClass(n1)\n  log(x.getClass('a').name)\n  log(x.getNewObject('a').constructor.name)\n  log(x.getClass('a').name)\n\n  class n2 {static getType () { return 'b' }}\n  class n3 {static getType () { return 'a' }}\n\n  x.registerClass(n2)\n  x.registerClass(n3)\n\n  log(x.getClass('a').name)\n  log(x.getClass('b').name)\n\n  class n4 {}\n  try { x.registerClass(n4) } catch (e) { log(e) }\n\n  try {\n    log(x.getClass('c').name)\n  } catch (e) { log(e) }\n}\n\nexport default factoryDemo\n","import IdGenerator from '../misc/helpers.js'\nimport Vec2d from '../misc/vector.js'\n\nclass CrochetNode {\n// *** CLASS STATIC METHODS ***\n  // and their wrappers to use them in instances\n\n  static getType () { return 'default' } // unambiguous string for each subclass\n  getType () { return this.constructor.getType() }\n\n  static getDesc () { return 'default node class' } // human freindlz class desc.\n  getDesc () { return this.constructor.getDesc() }\n\n  static isLoopable () { return false } // can the node serve as a \"loop\" node other stitches conenct to\n  isLoopable () { return this.constructor.isLoopable() }\n\n  static getColor () { return 'black' } // how to draw the node\n  getColor () { return this.constructor.getColor() }\n\n  constructor (argContext, argCoordinates) {\n    //  STATIC ATTRIBUTES\n\n    // create dedicated node numbering sequence\n    if (typeof CrochetNode.COUNTER === 'undefined') {\n      CrochetNode.COUNTER = new IdGenerator('ND')\n    }\n\n    // Parse and validate constructor argumetns\n\n    if (arguments.length < 2) throw new Error('CrochetNode : not enough arguments')\n\n    // context where the node will be registered (stitch)\n    // do I even need it...?\n    this._context = argContext\n\n    if (argCoordinates instanceof Array) {\n      if (argCoordinates.length < 2) throw new Error('CrochetNode : there must be two coordinatess in coordinates Array')\n      if (typeof (argCoordinates[0]) !== 'number' || typeof (argCoordinates[1]) !== 'number') throw new Error('CrochetNode : both coordinates must be numbers')\n      this.x = argCoordinates[0]\n      this.y = argCoordinates[1]\n    } else if (argCoordinates instanceof Vec2d) {\n      this.x = argCoordinates.getArray()[0]\n      this.y = argCoordinates.getArray()[1]\n    } else {\n      throw new Error('CrochetNode : coordinates must be an Array or Vec2d vector')\n    }\n\n    // by default nodes are not fixed in position\n    this.fx = null\n    this.fy = null\n\n    // based on created links, we will keep tracck of nearest neighboring nodes on graph\n    this._out_neighbors = new Map()\n    this._in_neighbors = new Map()\n\n    // other references\n    this.id = CrochetNode.COUNTER.next()\n  }\n\n  // *** PUBLIC METHODS ***\n\n  // if a node is to be removed, it needs to:\n  // - have all links removed (they self-unregister themselves from their start/end nodes)\n  // - be un-registered form all contexts\n  apoptose () {\n    this._out_neighbors = undefined\n    this._to_neighbors = undefined\n    this._context = undefined\n  }\n\n  getContext () { return this._context }\n\n  // overrides the default .toString()\n  toString () {\n    return `[node : ${this.getType()} ${this.id}]`\n  }\n\n  // Returns the (x,y) position of the node as a Vector object\n  getVector () {\n    return new Vec2d(this.x, this.y)\n  };\n\n  setVector (v) {\n    if (v instanceof Vec2d) { [this.x, this.y] = v.getArray() }\n    return this\n  }\n\n  // Add a new link to the reference list of all links this node is connected by\n  registerNeighbor (newLink) {\n    if (this !== newLink.source && this !== newLink.target) return false\n    if (this === newLink.source) {\n      this._out_neighbors.set(newLink, newLink.target)\n    } else {\n      this._in_neighbors.set(newLink, newLink.source)\n    }\n    return this\n  }\n\n  // Removes an existing link from the reference list\n  unRegisterNeighbor (oldLink) {\n    this._in_neighbors.delete(oldLink)\n    this._out_neighbors.delete(oldLink)\n    return this\n  }\n\n  // returns all links associated with this node, filtered by link type and direction\n  // possible call arguments: linkType, linkDir\n  getNeighborLinks (dir = '', type = '') {\n    // where the temp results will be stored\n    const links = []\n\n    // The filtering link direction must be either empty, \"IN\" or \"OUT\"\n    if (dir !== '' && dir !== 'in' && dir !== 'out') throw new Error('crochetNode.getNeighborLinks: invalid direction')\n\n    // Get the required links\n    if (dir === '' || dir === 'in') {\n      this._in_neighbors.forEach(\n        (val, key, map) => ((key.getType() === type || type === '') ? links.push(key) : undefined),\n        links\n      )\n    }\n    if (dir === '' || dir === 'out') {\n      this._out_neighbors.forEach(\n        (val, key, map) => ((key.getType() === type || type === '') ? links.push(key) : undefined),\n        links\n      )\n    }\n\n    return links\n  }\n\n  // Returns all neighbor nodes of this node, filtered by node type and direction of their link\n  getNeighborNodes (dir = '', type = '') {\n    // where the temp results will be stored\n    const nodes = []\n\n    // The filtering link direction must be either empty, \"IN\" or \"OUT\"\n    if (dir !== '' && dir !== 'in' && dir !== 'out') throw new Error('crochetNode.getNeighborNodes: invalid direction')\n\n    // Get the required nodes\n    if (dir === '' || dir === 'in') {\n      this._in_neighbors.forEach(\n        (val, key, map) => ((val.getType() === type || type === '') ? nodes.push(val) : undefined),\n        nodes\n      )\n    }\n    if (dir === '' || dir === 'out') {\n      this._out_neighbors.forEach(\n        (val, key, map) => ((val.getType() === type || type === '') ? nodes.push(val) : undefined),\n        nodes\n      )\n    }\n    return nodes\n  }\n\n  getNeighborCount () {\n    return this._in_neighbors.size + this._out_neighbors.size\n  }\n\n  getArray () { return [this.x, this.y] }\n}\n\nexport default CrochetNode\n","import CrochetNode from './crochetNode.js'\n\nclass CrochetNodeOrigin extends CrochetNode {\n  static getType () { return 'origin' }\n  static getDesc () { return 'the first node in the crochet project' }\n  static isLoopable () { return true }\n\n  constructor (argContext, argCoordinates) {\n    super(argContext, argCoordinates)\n    // origin is ALWAYS fixed\n    this.fx = this.x\n    this.fy = this.y\n  }\n}\n\nexport default CrochetNodeOrigin\n","import CrochetNode from './crochetNode.js'\n\nclass CrochetNodeStart extends CrochetNode {\n  static getType () { return 'start' }\n  static getDesc () { return 'first node of a stitch. Also its first hook' }\n  static getColor () { return 'green' }\n}\n\nexport default CrochetNodeStart\n","import CrochetNode from './crochetNode.js'\n\nclass CrochetNodeFinish extends CrochetNode {\n  static getType () { return 'finish' }\n  static getDesc () { return 'last node of a stitch. Also its last loop' }\n  static isLoopable () { return true }\n  static getColor () { return 'red' }\n}\n\nexport default CrochetNodeFinish\n","import CrochetNode from './crochetNode.js'\n\nclass CrochetNodeLoop extends CrochetNode {\n  // constructor(context, position){super(context, position)}\n  static getType () { return 'loop' }\n  static getDesc () { return \"a node that other stitches' hooks can attach to\" }\n  static isLoopable () { return true }\n  static getColor () { return 'blue' }\n}\n\nexport default CrochetNodeLoop\n","import CrochetNode from './crochetNode.js'\n\nclass CrochetNodeHook extends CrochetNode {\n  static getType () { return 'hook' }\n  static getDesc () { return \"a node that must attach to other stitches' loops\" }\n  static getColor () { return 'brown' }\n}\n\nexport default CrochetNodeHook\n","import CrochetNode from './crochetNode.js'\n\nclass CrochetNodeStruct extends CrochetNode {\n  static getType () { return 'struct' }\n  static getDesc () { 'a node that is only there for structure modeling (neither LOOP, nor HOOK)' }\n  static getColor () { return 'darkgray' }\n}\n\nexport default CrochetNodeStruct\n","import CrochetNode from './crochetNode.js'\n\nclass CrochetNodeCHSpaceStart extends CrochetNode {\n  static getType () { return 'ch_sp_start' }\n  static getDesc () { return \"first (not removable) loop of a 'chain space'. It carries ch.sp. total len.\" }\n  static getColor () { return 'yellow' }\n}\n\nexport default CrochetNodeCHSpaceStart\n","import CrochetNode from './crochetNode.js'\n\nclass CrochetNodeCHSpaceCont extends CrochetNode {\n  static getType () { return 'ch_sp_cont' }\n  static getDesc () { return \"any subsequent node of a 'chain space'\" }\n  static getColor () { return 'violet' }\n}\n\nexport default CrochetNodeCHSpaceCont\n","import CrochetNode from '../crochetNode.js'\nimport CrochetNodeOrigin from '../crochetNodeOrigin.js'\nimport CrochetNodeStart from '../crochetNodeStart.js'\nimport CrochetNodeFinish from '../crochetNodeFinish.js'\nimport CrochetNodeLoop from '../crochetNodeLoop.js'\nimport CrochetNodeHook from '../crochetNodeHook.js'\nimport CrochetNodeStruct from '../crochetNodeStruct.js'\nimport CrochetNodeCHSpaceStart from '../crochetNodeCHSpaceStart.js'\nimport CrochetNodeCHSpaceCont from '../crochetNodeCHSpaceCont.js'\n\nfunction crocehtNodeDemo (log) {\n  let n = new CrochetNode('A', [1, 2])\n  log(`${n} : type ${n.getType()}`)\n\n  n = new CrochetNode('B', [2, 3])\n  log(`${n} : array ${n.getArray()} `)\n\n  n = new CrochetNodeOrigin('X', [9, 9])\n  log(`${n} : vector  ${n.getVector()} `)\n\n  n = new CrochetNodeStart('Y', [9, 9])\n  log(`${n} : neighbor count ${n.getNeighborCount()} `)\n\n  n = new CrochetNodeFinish('Y', [9, 9])\n  const n2 = new CrochetNode('A', [1, 2])\n  const n3 = new CrochetNode('A', [1, 2])\n\n  let l1 = { source: n, target: n2 }\n  const l2 = { source: n, target: n3 }\n  n.registerNeighbor(l1).registerNeighbor(l2)\n  n2.registerNeighbor(l1)\n  n3.registerNeighbor(l2)\n  log(`${n} : neighbors ${n.getNeighborNodes()} `)\n  log(`${n2} : neighbors ${n2.getNeighborNodes()} `)\n  log(`${n3} : neighbors ${n3.getNeighborNodes()} `)\n\n  n = new CrochetNodeHook('Y', [9, 9])\n  l1 = { source: n, target: n2, getType: () => 'x' }\n  n.registerNeighbor(l1)\n  log(`${n} : links ${n.getNeighborLinks()[0].source.getVector()} `)\n\n  n = new CrochetNodeLoop('Y', [9, 9])\n  log(`${n} : loopable ${n.isLoopable()} `)\n\n  n = new CrochetNodeStruct('Y', [9, 9])\n  log(`${n} : string ${n.toString()} `)\n\n  n = new CrochetNodeCHSpaceStart('Y', [9, 9])\n  log(`${n} : string ${n.getColor()} `)\n\n  n = new CrochetNodeCHSpaceCont('Y', [9, 9])\n  log(`${n} : string ${n.getDesc()} `)\n}\n\nexport default crocehtNodeDemo\n","import IdGenerator from '../misc/helpers.js'\n// import Vec2d from '../misc/vector.js'\n\nclass CrochetLink {\n  // *** CLASS STATIC METHODS ***\n  // and their wrappers to use them in instances\n\n  static getDefLen () { return 10 } // link lenght for ForceLayout simulation\n  getDefLen () { return this.constructor.getDefLen() }\n\n  static getType () { return 'default' } // unambiguous string for each subclass\n  getType () { return this.constructor.getType() }\n\n  static getDesc () { return 'default link class' } // human friendly desc.\n  getDesc () { return this.constructor.getDesc() }\n\n  static isPrintable () { return false } // should it be drawn in documents\n  isPrintable () { return this.constructor.isPrintable() }\n\n  static getColor () { return 'lightgray' } // how to draw it\n  getColor () { return this.constructor.getColor() }\n\n  // *** CONSTRUCTOR ***\n\n  constructor (context, fromNode, toNode, length = undefined) {\n    // *** STATIC ATTRIBUTES ***\n\n    // Create dedicated link numbering sequence\n    if (typeof CrochetLink.COUNTER === 'undefined') {\n      CrochetLink.COUNTER = new IdGenerator('LK')\n    };\n\n    // *** PRIVATE ATTRIBUTES ***\n\n    // basic\n    this.source = fromNode\n    this.target = toNode\n    this._context = context\n    // for future: removing nodes form simulation without destrying the objects => ready for u-do action\n    this.is_deleted = false\n\n    // physics\n    if (length === undefined) {\n      this._length = this.constructor.getDefLen()\n    } else {\n      if (typeof length !== 'number') throw new Error('length must be a number')\n      this._length = length\n    }\n\n    // references\n    this.id = CrochetLink.COUNTER.next()\n\n    // *** HOUSEKEEPING - CREATION ***\n    fromNode.registerNeighbor(this)\n    toNode.registerNeighbor(this)\n  }\n\n  // methods needed for D3JS simulation\n  strength () {\n    return (this.is_deleted) ? 0 : 1\n    // return 1 / Math.min(this.source.getNeighborCount(), this.target.getNeighborCount())\n  }\n\n  // *** PUBLIC METHODS ***\n\n  // if a link is to be removed, it needs to:\n  // - be remove from neighbors list and clear its references\n  // - be un-registered form all contexts\n  apoptose () {\n    this.source.unRegisterNeighbor(this)\n    this.target.unRegisterNeighbor(this)\n    this.source = undefined\n    this.target = undefined\n    this._context = undefined\n  }\n\n  getContext () { return this._context }\n\n  // overrides the default .toString()\n  toString () {\n    return `[link : ${this.getType()} ${this.id}]`\n  }\n\n  getOtherEnd (node) {\n    if (this.source === node) {\n      return this.target\n    } else if (this.target === node) {\n      return this.source\n    } else {\n      return false\n    };\n  };\n\n  // Return the real (geometrical) length of this link\n  getRealLen () {\n    return this.source.getVector().sub(this.target.getVector()).len()\n  };\n\n  // wrapper for the getRealLen that can return derivatives, that depend on neighborhood\n  // will be used in \"chainspace\" stitches\n  getLen () {\n    return this.getDefLen()\n  }\n\n  // get all neighbouring nodes of the two connected nodes\n  getNeighborhood (withEnds = true) {\n    let nodes = this.source.getNeighborNodes().concat(this.target.getNeighborNodes())\n    if (withEnds) {\n      nodes = nodes\n        .concat(this.target)\n        .concat(this.source)\n    }\n    return nodes\n  }\n\n  // replace one of the connected nodes\n  replaceNode (oldNode, newNode) {\n    if (newNode === this.source || newNode === this.target) throw new Error('crocherLink.replaceNode : new node not distinct')\n    if (oldNode !== this.source && oldNode !== this.target) throw new Error('crocherLink.replaceNode : old node not from link')\n    if (oldNode._context !== newNode._context) throw new Error('crocherLink.replaceNode : both nodes must be fro msmae Stitch')\n\n    if (oldNode === this.source) {\n      this.source = newNode\n    } else if (oldNode === this.target) {\n      this.target = newNode\n    };\n\n    newNode.registerNeighbor(this)\n    oldNode.unRegisterNeighbor(this)\n\n    return this\n  }\n}\n\nexport default CrochetLink\n","import CrochetLink from './crochetLink.js'\n\nclass CrochetLinkExternal extends CrochetLink {\n  static getType () { return 'external' }\n  static getDeftLen () { return 10 }\n  static getDesc () { return 'connects a nodes from two distinct stitches' }\n}\n\nexport default CrochetLinkExternal\n","import CrochetLink from './crochetLink.js'\n\nclass CrochetLinkSequential extends CrochetLink {\n  static getType () { return 'sequence' }\n  static getDeftLen () { return 10 }\n  static getDesc () { return 'connects nodes from the main sequence' }\n  static getColor () { return '#333' }\n}\n\nexport default CrochetLinkSequential\n","import CrochetLink from './crochetLink.js'\n\nclass CrochetLinkZero extends CrochetLink {\n  static getType () { return 'zero' }\n  static getDeftLen () { return 0 }\n  static getDesc () { return 'zero-lenght link' }\n}\n\nexport default CrochetLinkZero\n","import CrochetLink from './crochetLink.js'\n\nclass CrochetLinkCHSpace extends CrochetLink {\n  static getType () { return 'chain_space' }\n  static getDeftLen () { return 10 }\n  static getDesc () { return 'links in a chainspace' }\n}\n\nexport default CrochetLinkCHSpace\n","import CrochetLink from '../crochetLink.js'\nimport CrochetLinkExternal from '../crochetLinkExternal.js'\nimport CrochetLinkSequential from '../crochetLinkSequential.js'\nimport CrochetLinkZero from '../crochetLinkZero.js'\nimport CrochetLinkCHSpace from '../crochetLinkCHSpace.js'\n\nfunction crochetLinkDemo (log) {\n  const n1 = { x: 1, y: 2, registerNeighbor: () => {} }\n  const n2 = { x: -1, y: 3, registerNeighbor: () => {} }\n  const n3 = { x: -5, y: -5, registerNeighbor: () => {} }\n\n  let l = new CrochetLink('A', n1, n2)\n  log(`${l} : type ${l.getType()}`)\n\n  l = new CrochetLinkExternal('A', n1, n3)\n  log(`${l} : len ${l.getDefLen()} `)\n\n  l = new CrochetLinkSequential('A', n2, n3)\n  log(`${l} : color ${l.getColor()} `)\n\n  l = new CrochetLinkZero('A', n3, n1)\n  log(`${l} : ends n3 ${l.getOtherEnd(n3)} `)\n  log(`${l} : ends n2 ${l.getOtherEnd(n2)} `)\n\n  l = new CrochetLinkCHSpace('A', n3, n2)\n  log(`${l} : desc ${l.getDesc()} `)\n}\n\nexport default crochetLinkDemo\n","import CrochetLink from './crochetLink.js'\nimport Vec2d from '../misc/vector.js'\nimport { Plotter, GraphCommand, TransformationTwoVector } from '../misc/graphics.js'\n\nclass CrochetDraw extends CrochetLink {\n  // override crochetLink dfaults\n  static getType () { return 'draw' }\n  static getDeftLen () { return 10 }\n  static getDesc () { return 'no-strength link used for drawing' }\n  static isPrintable () { return true } // this means it can have its getPath() method used properly!\n  strenght () { return 0 }\n\n  // add more stuff, specifically needed for displaying\n  static getPathDef () {\n    return 'l:100,0%'\n  }\n\n  getPathDef () { return this.constructor.getPathDef() }\n\n  static getColor () { return 'black' }\n  getColor () { return this.constructor.getColor() }\n\n    // what a valid path definition string looks like\n    static commandRegEx = /[a-zA-Z_]+( *: *-?[0-9]+,-?[0-9]+(% *(-?[0-9]+,-?[0-9]+)?)?)+$/\n\n    // given a path definition, transform it into an array of two-vectors used for drawing\n    static tokenizeDrawingCommands (pathStr = '') {\n      // transform path definition string to an array of single commands\n      let commands = pathStr\n        .split(';') // str -> array\n        .map(e => e.trim()) // remove extra spaces\n        .filter(e => e !== '') // remove empty commands\n\n      if (commands.length === 0) return []\n\n      // remove invalidly formatted commands\n      commands = commands.filter(c => (c.match(CrochetDraw.commandRegEx) !== null))\n\n      // translate command string into tokenized command parameters\n      const tokenized = commands\n        .map(token => {\n          const res = {}; // the ; is critical here\n          [res.cmd, ...res.params] = token.split(':').map(e => e.trim()) // the ; is critical here\n          return res // the ; is critical here\n        })\n        .filter(e => Plotter.allowedCommands.has(e.cmd)) // valid command name\n        .filter(e => (Plotter.allowedCommands.get(e.cmd).numPts <= e.params.length)) // with enough param points\n      return tokenized\n    }\n\n    static parseDrawingCmds (tokenizedCommands = []) {\n      // convert each of the parameters into a two-vector\n      // first vector is %-translaton (p,p)\n      // second the abs-translation (a,a)\n      const parsedCmds = tokenizedCommands\n        .map(token => {\n          const paramTwoVectors = token.params\n            .map(param => { // \"a,a\" | \"p,p%\" | \"p,p % a,a\"\n              param = '%' + param // \"%a,a\" | \"%p,p%\" \"| \"%p,p % a,a\"\n\n              const twoVecArray = param\n                .split('%')\n                .map(e => e.trim()) // [ \"\", \"a,a\"] | [\"\", \"p,p\". \"\"] | [\"\", \"p,p\", \"a,a\"]\n                .reverse() // [\"a,a\", \"\"] | [\"\", \"p,p\". \"\"] | [\"a,a\", \"p,p\", \"\"]\n                .slice(0, 2) // [\"a,a\", \"\"] | [\"\", \"p,p\"] | [\"a,a\", \"p,p\"]\n                .map(f => (f === '' ? '0,0' : f)) // [\"a,a\", \"0,0\"] | [\"0,0\", \"p,p\"] | [\"a,a\", \"p,p\"]\n                .map(g => g\n                  .split(',')\n                  .map(h => parseFloat(h))\n                ) // [[ax,ay],[px,py]] etc..\n                .map(i => new Vec2d(i)) // [[Vec2d],[Vec2d])\n\n              // %-vector is given in perc.pts., so...\n              twoVecArray[1] = twoVecArray[1].scale(0.01)\n\n              return new TransformationTwoVector(twoVecArray) // { vAbs: [Vec2d], vPerc: [Vec2d] }\n            })\n\n          // new token\n          return new GraphCommand(token.cmd, paramTwoVectors)\n        })\n\n      return parsedCmds\n    }\n\n    constructor () {\n      super(...arguments)\n      this.setNewPath()\n    }\n\n    setNewPath (p = '') {\n      const pahtDefString = (p === '') ? this.getPathDef() : p\n      const pathCmds = this.constructor.tokenizeDrawingCommands(pahtDefString)\n      this.pathDefVectors = this.constructor.parseDrawingCmds(pathCmds)\n    }\n}\n\nexport default CrochetDraw\n","import CrochetDraw from '../crochetDraw.js'\n\nfunction crochetDrawDemo (log) {\n  const n1 = { x: 1, y: 2, registerNeighbor: () => {} }\n  const n2 = { x: -1, y: 3, registerNeighbor: () => {} }\n\n  const l = new CrochetDraw('A', n1, n2)\n  log(l.getPathDef())\n  l.pathDefVectors.forEach((command, i) => {\n    log(`cmd : ${command.cmd}`)\n    command.params.forEach((twovector, j) => {\n      log(` - ${twovector.vPerc.scale(100)} % ${twovector.vAbs} u`)\n    })\n  })\n}\n\nexport default crochetDrawDemo\n","// just a wrapper class to ensure that all crochet oprations speak the same \"language\"\n\n// import CrochetStitch from '../crochetStitch.js'\nimport CrochetNode from '../../nodes/crochetNode.js'\n\nclass OperationSubject {\n  constructor (needle = [], stitch, otherLoops = []) {\n    if (!(needle instanceof Array)) throw new Error('crochet operationSubject : needle must be an Array [crochetNode]')\n    if (!(otherLoops instanceof Array)) throw new Error('crochet operationSubject : otherLoops must be an Array [crochetNode]')\n    // if (!(stitch instanceof CrochetStitch)) throw new Error('crochet operationSubject : stitch must be an instance of CrochetStitch')\n    this.needleStack = needle.filter(e => (e instanceof CrochetNode))\n    this.contextStitch = stitch\n    this.otherLoops = otherLoops.filter(e => (e instanceof CrochetNode))\n  }\n\n  copy () {\n    return new OperationSubject(this.needleStack, this.contextStitch, this.otherLoops)\n  }\n}\n\nexport default OperationSubject\n","import FactoryClass from '../misc/factory.js'\nimport CrochetNode from './crochetNode.js'\n\nimport CrochetNodeOrigin from './crochetNodeOrigin.js'\nimport CrochetNodeStart from './crochetNodeStart.js'\nimport CrochetNodeFinish from './crochetNodeFinish.js'\nimport CrochetNodeHook from './crochetNodeHook.js'\nimport CrochetNodeLoop from './crochetNodeLoop.js'\nimport CrochetNodeStruct from './crochetNodeStruct.js'\nimport CrochetNodeCHSpaceStart from './crochetNodeCHSpaceStart.js'\nimport CrochetNodeCHSpaceCont from './crochetNodeCHSpaceCont.js'\n\nconst crochetNodeFactory = new FactoryClass(CrochetNode, 'getType')\n\ncrochetNodeFactory\n  .registerClass(CrochetNodeOrigin)\n  .registerClass(CrochetNodeStart)\n  .registerClass(CrochetNodeFinish)\n  .registerClass(CrochetNodeHook)\n  .registerClass(CrochetNodeLoop)\n  .registerClass(CrochetNodeStruct)\n  .registerClass(CrochetNodeCHSpaceStart)\n  .registerClass(CrochetNodeCHSpaceCont)\n\nexport default crochetNodeFactory\n","import FactoryClass from '../misc/factory.js'\nimport CrochetLink from './crochetLink.js'\n\nimport CrochetLinkSequential from './crochetLinkSequential.js'\nimport CrochetLinkExternal from './crochetLinkExternal.js'\nimport CrochetLinkCHSpace from './crochetLinkCHSpace.js'\nimport CrochetLinkZero from './crochetLinkZero.js'\nimport CrochetDraw from './crochetDraw.js'\n\nconst crochetLinkFactory = new FactoryClass(CrochetLink, 'getType')\n\ncrochetLinkFactory\n  .registerClass(CrochetLinkSequential)\n  .registerClass(CrochetLinkExternal)\n  .registerClass(CrochetLinkCHSpace)\n  .registerClass(CrochetLinkZero)\n  .registerClass(CrochetDraw)\n\nexport default crochetLinkFactory\n","import OperationSubject from './operationSubject.js'\nimport crochetNodeFactory from '../../nodes/nodeFactory.js'\nimport crochetLinkFactory from '../../links/linkFactory.js'\n\nclass CrochetOperation {\n  static getCommandName () { return 'default' }\n  getCommandName () { return this.constructor.getCommandName() }\n\n  static minParams () { return 0 }\n  minParams () { return this.constructor.minParams() }\n\n    static nodeFactory = crochetNodeFactory\n    static linkFactory = crochetLinkFactory\n\n    constructor (subject, cmds) {\n      if (!(subject instanceof OperationSubject)) throw new Error('crochetOperation : needs a valid operationSubject')\n      if (!(cmds instanceof Array)) throw new Error('crochetOperation : params must be an array [string]')\n      this.params = cmds.filter(e => (typeof e === 'string')) // first argument will be an Array of the operation parameters\n      if (this.params.length < this.minParams()) throw new Error(`crochetOperation : not enough parameters for '${this.getCommandName()}'. Expected : ${this.minParams()}`)\n      this.subject = subject // rest is the subject of the operation - components of the W.I.P. crochetStitch\n    }\n\n    getBasicResult (newSubject, newNode = false, newLink = false, delNode = false, delLink = false) {\n      return {\n        subject: newSubject,\n        newNode: newNode,\n        newLink: newLink,\n        delNode: delNode,\n        delLink: delLink\n      }\n    }\n\n    exec () {\n      return this.getBasicResult(this.subject) // no new links or nodes were created or removed\n    }\n}\n\nexport default CrochetOperation\n","import CrochetOperation from './crochetOperation.js'\n\nclass CrochetOperationMakeOrigin extends CrochetOperation {\n  static getCommandName () { return 'makeorigin' }\n\n  exec () {\n    const newSubject = this.subject.copy()\n    const newNode = CrochetOperation.nodeFactory.getNewObject(\n      'origin',\n      this.subject.contextStitch,\n      [0, 0]\n    )\n    newSubject.needleStack.push(newNode)\n    return this.getBasicResult(newSubject, newNode)\n  }\n}\n\nexport default CrochetOperationMakeOrigin\n","import CrochetOperation from './crochetOperation.js'\nimport Vec2d from '../../misc/vector.js'\n\nclass CrochetOperationBasic extends CrochetOperation {\n  static getCommandName () { return 'mk' }\n  static minParams () { return 2 }\n\n  static CALC_DEF_NEW_POS (fromNode, byLinkType) {\n    // setup\n    const len = CrochetOperation.linkFactory.getClass(byLinkType).getDefLen()\n    const start = fromNode.getVector()\n\n    // initial direction of the new position is relative to fromNode\n    // pointing away from center of mass of its neighbors\n    let neighbors = fromNode.getNeighborNodes() // by def. fromnode will be excluded\n    if (neighbors.length === 0) neighbors = [fromNode]\n    const neighborVecs = neighbors.map(e => e.getVector())\n    const avgNeighborVec = Vec2d.SUM(neighborVecs).scale(1 / neighborVecs.length)\n    let delta = start.sub(avgNeighborVec)\n\n    // fix corner cases\n    if (delta.len() > 0) {\n      // delta<>(0,0) => neighbors' CoM is not same as fromNode => go in opposite dir to it\n      delta = delta.len(len)\n      // CoM same as fromNode => extend the fromnode position outwards but turn by PI/20\n      if (neighbors[0] === fromNode) { delta = delta.rot(Math.PI / 20) };\n    } else {\n      // delta == (0,0), then\n      // default direction is UP\n      // unless start node was off-center by a enough, then follow that\n      const dir = (start.len() < 0.01) ? new Vec2d(0, -1) : start.unit().rot(Math.PI / 20)\n      delta = dir.len(len)\n    }\n\n    return start.add(delta)\n  }\n\n  exec () {\n    // const newSubject, sourceNode, newNodeType, newNode, newLinkType, newLink, newPos\n\n    const [newLinkType, newNodeType] = this.params\n    const newSubject = this.subject.copy()\n    const sourceNode = newSubject.needleStack.pop()\n\n    const newPos = CrochetOperationBasic.CALC_DEF_NEW_POS(sourceNode, newLinkType) // ??? where to put this function best ???\n    const newNode = CrochetOperation.nodeFactory.getNewObject(newNodeType, this.subject.contextStitch, newPos)\n    const newLink = CrochetOperation.linkFactory.getNewObject(newLinkType, this.subject.contextStitch, sourceNode, newNode)\n    newSubject.needleStack.push(newNode)\n\n    return this.getBasicResult(newSubject, newNode, newLink)\n  }\n}\n\nexport default CrochetOperationBasic\n","import CrochetOperation from './crochetOperation.js'\n\nclass CrochetOperationCopy extends CrochetOperation {\n  static getCommandName () { return 'cp' }\n\n  exec () {\n    const cmd = this.params[0]\n    if (cmd !== 'needle' && cmd !== 'other') throw new Error(`crochetOperationCopy : Expected parameter to be 'needle' or 'other', got '${cmd}'`)\n\n    const newSubject = this.subject.copy()\n    const tmp = (\n      cmd === 'needle'\n        ? newSubject.needleStack.pop()\n        : newSubject.otherLoops.pop()\n    )\n\n    newSubject.otherLoops.push(tmp)\n    newSubject.needleStack.push(tmp)\n    return this.getBasicResult(newSubject)\n  }\n}\n\nexport default CrochetOperationCopy\n","import CrochetOperation from './crochetOperation.js'\n// import Vec2d from '../../misc/vector.js'\n\nclass CrochetOperationMove extends CrochetOperation {\n  static getCommandName () { return 'mv' }\n\n  exec () {\n    const cmd = this.params[0]\n    const newSubject = this.subject.copy()\n\n    if (cmd === 'needle') {\n      newSubject.otherLoops.push(newSubject.needleStack.pop())\n    } else if (cmd === 'other') {\n      newSubject.needleStack.push(newSubject.otherLoops.pop())\n    } else {\n      throw new Error(`crochetOperationMove : Expected parameter to be 'needle' or 'other', got '${cmd}'`)\n    }\n\n    const res = this.getBasicResult(newSubject)\n    return res\n  }\n}\n\nexport default CrochetOperationMove\n","import CrochetOperation from './crochetOperation.js'\n// import Vec2d from '../../misc/vector.js'\n\nclass CrochetOperationMerge extends CrochetOperation {\n  static getCommandName () { return 'merge' }\n\n  exec () {\n    const cmd = this.params[0]\n    const newSubject = this.subject.copy()\n\n    let targetNode, sourceNode\n    let deletedLink = false\n\n    if (newSubject.needleStack.length < 2) throw new Error('crochetOperationMerge : not enough nodes on needle to merge')\n\n    if (cmd === 'left') {\n      targetNode = newSubject.needleStack.pop()\n      sourceNode = newSubject.needleStack.pop()\n    } else if (cmd === 'right') {\n      sourceNode = newSubject.needleStack.pop()\n      targetNode = newSubject.needleStack.pop()\n    } else {\n      if (cmd !== 'left' && cmd !== 'right') throw new Error(`crochetOperationMerge : Expected direction to be 'left' or 'right', got '${cmd}'`)\n    }\n\n    const newPosition = sourceNode\n      .getVector()\n      .add(targetNode.getVector())\n      .scale(0.5)\n\n    targetNode.setVector(newPosition)\n\n    const linksToTransfer = sourceNode.getNeighborLinks()\n    const existingNeighbors = targetNode.getNeighborNodes()\n\n    linksToTransfer.forEach(e => {\n      // if target and source were linked, this link is not valid anymore\n      if (e.getOtherEnd(sourceNode) === targetNode) {\n        deletedLink = e\n      } else {\n        if (!existingNeighbors.includes(e.getOtherEnd(sourceNode))) { e.replaceNode(sourceNode, targetNode) }\n      }\n    })\n\n    const res = this.getBasicResult(newSubject, false, false, sourceNode, deletedLink)\n    return res\n  }\n}\n\nexport default CrochetOperationMerge\n","import FactoryClass from '../../misc/factory.js'\nimport CrochetOperation from './crochetOperation.js'\n\nimport CrochetOperationMakeOrigin from './crochetOperationMakeOrigin.js'\nimport CrochetOperationBasic from './crochetOperationBasic.js'\nimport CrochetOperationCopy from './crochetOperationCopy.js'\nimport CrochetOperationMove from './crochetOperationMove.js'\nimport CrochetOperationMerge from './crochetOperationMerge.js'\n\nconst crochetOperationFactory = new FactoryClass(CrochetOperation, 'getCommandName')\n\ncrochetOperationFactory\n  .registerClass(CrochetOperationMakeOrigin)\n  .registerClass(CrochetOperationBasic)\n  .registerClass(CrochetOperationCopy)\n  .registerClass(CrochetOperationMove)\n  .registerClass(CrochetOperationMerge)\n\nexport default crochetOperationFactory\n","import OperationSubject from '../operationSubject.js'\nimport crochetOperationFactory from '../operationFactory.js'\nimport crochetNodeFactory from '../../../nodes/nodeFactory.js'\nimport crochetLinkFactory from '../../../links/linkFactory.js'\n\nfunction crochetOperationDemo (log) {\n  const st = 's'\n\n  log('make default')\n\n  let sub = new OperationSubject([], st, [])\n\n  let x = crochetOperationFactory.getNewObject('default', sub, [])\n  let r = x.exec()\n  log(r.newNode)\n\n  log('make origin')\n\n  x = crochetOperationFactory.getNewObject('makeorigin', sub, [])\n  r = x.exec()\n  log(`${r.newNode.getType()} : ${r.newNode.id}`)\n\n  const n1 = r.subject.needleStack[0]\n\n  log('make simple')\n\n  sub = r.subject\n\n  x = crochetOperationFactory.getNewObject('mk', sub, ['external', 'struct'])\n  r = x.exec()\n  log(`new node : ${r.newNode.getType()} : ${r.newNode.id}`)\n  log(`new link : ${r.newLink.getType()} : ${r.newLink.id}`)\n  log(`del node : ${x.delNode}`)\n  log(`del link: ${x.delLink}`)\n  log(`subject : ${x.subject}`)\n\n  const n2 = r.subject.needleStack[0]\n\n  log('copy from needle ')\n\n  sub = new OperationSubject([n1], st, [n2])\n  log('before')\n  log('needle: ' + sub.needleStack.map(e => e.id))\n  log('other: ' + sub.otherLoops.map(e => e.id))\n  let z1 = crochetOperationFactory.getNewObject('cp', sub, ['needle']).exec()\n  log('after')\n  log('needle: ' + z1.subject.needleStack.map(e => e.id))\n  log('other: ' + z1.subject.otherLoops.map(e => e.id))\n\n  log('copy to needle ')\n\n  sub = new OperationSubject([n1], st, [n2])\n  log('before')\n  log('needle: ' + sub.needleStack.map(e => e.id))\n  log('other: ' + sub.otherLoops.map(e => e.id))\n  z1 = crochetOperationFactory.getNewObject('cp', sub, ['other']).exec()\n  log('after')\n  log('needle: ' + z1.subject.needleStack.map(e => e.id))\n  log('other: ' + z1.subject.otherLoops.map(e => e.id))\n\n  log('move from needle ')\n\n  sub = new OperationSubject([n1], st, [n2])\n  log('before')\n  log('needle: ' + sub.needleStack.map(e => e.id))\n  log('other: ' + sub.otherLoops.map(e => e.id))\n  z1 = crochetOperationFactory.getNewObject('mv', sub, ['needle']).exec()\n  log('after')\n  log('needle: ' + z1.subject.needleStack.map(e => e.id))\n  log('other: ' + z1.subject.otherLoops.map(e => e.id))\n\n  log('move to needle ')\n\n  sub = new OperationSubject([n1], st, [n2])\n  log('before')\n  log('needle: ' + sub.needleStack.map(e => e.id))\n  log('other: ' + sub.otherLoops.map(e => e.id))\n  z1 = crochetOperationFactory.getNewObject('mv', sub, ['other']).exec()\n  log('after')\n  log('needle: ' + z1.subject.needleStack.map(e => e.id))\n  log('other: ' + z1.subject.otherLoops.map(e => e.id))\n\n  const s = crochetNodeFactory.getNewObject('origin', 'A', [0, 0])\n  const s1 = crochetNodeFactory.getNewObject('origin', 'A', [10, 0])\n  const s2 = crochetNodeFactory.getNewObject('origin', 'A', [0, 10])\n  const s3 = crochetNodeFactory.getNewObject('origin', 'A', [10, 10])\n\n  const t = crochetNodeFactory.getNewObject('origin', 'A', [-10, -10])\n  const t1 = crochetNodeFactory.getNewObject('origin', 'A', [-10, -20])\n  const t2 = crochetNodeFactory.getNewObject('origin', 'A', [-20, -10])\n\n  const ls1 = crochetLinkFactory.getNewObject('sequence', 'A', s, s1)\n  const ls2 = crochetLinkFactory.getNewObject('sequence', 'A', s, s2)\n  const ls3 = crochetLinkFactory.getNewObject('sequence', 'A', s, s3)\n\n  const lt1 = crochetLinkFactory.getNewObject('sequence', 'A', t, t1)\n  const lt2 = crochetLinkFactory.getNewObject('sequence', 'A', t, t2)\n  const lt3 = crochetLinkFactory.getNewObject('sequence', 'A', t, s3)\n\n  const l = crochetLinkFactory.getNewObject('sequence', 'A', t, s)\n\n  log`before merge`\n\n  log(`source ${s.id} : ${s.getNeighborNodes().map(e => e.id)}`)\n  log(`target ${t.id} : ${t.getNeighborNodes().map(e => e.id)}`)\n  sub = new OperationSubject([s, t], st, [])\n  x = crochetOperationFactory.getNewObject('merge', sub, ['left'])\n  r = x.exec()\n\n  log`after merge`\n\n  log(`deleted node : ${r.delNode.id}`)\n  log(`deleted link : ${r.delLink.id}`)\n  log(`source ${s.id} : ${s.getNeighborNodes().map(e => e.id)}`)\n  log(`target ${t.id} : ${t.getNeighborNodes().map(e => e.id)}`)\n\n  log(ls1, ls2, ls3, lt1, lt2, lt3, l)\n}\n\nexport default crochetOperationDemo\n","import IdGenerator from '../misc/helpers.js'\nimport CrochetNode from '../nodes/crochetNode.js'\nimport crochetOperationFactory from './operations/operationFactory.js'\nimport OperationSubject from './operations/operationSubject.js'\n\nclass CrochetStitch {\n  // *** CLASS STATIC METHODS ***\n  // and their wrappers to use them in instances\n\n  static getSequence () { return 'mk:default:default' } // reciupe how to create stitches internal graph\n  getSequence () { return this.constructor.getSequence() }\n\n  static getType () { return 'default' } // unambiguous string for each subclass\n  getType () { return this.constructor.getType() }\n\n  static getDesc () { return 'default stitch class' } // human friendlz description\n  getDesc () { return this.constructor.getDesc() }\n\n  static requiresPrevious () { return true } // true if the stitch requires prev. sittches last loop to hook into\n  requiresPrevious () { return this.constructor.requiresPrevious() }\n\n  static requiredLoops () { return 0 } // how manz other loops are needed to construct the stitch\n  requiredLoops () { return this.constructor.requiredLoops() }\n\n  // *** CONSTRUCTOR ***\n\n  constructor (context, attachToNode = null, otherLoops = []) {\n    // *** STATIC ATTRIBUTES ***\n\n    // Create dedicated stitch numbering sequence\n    if (typeof CrochetStitch.COUNTER === 'undefined') {\n      CrochetStitch.COUNTER = new IdGenerator('ST')\n    };\n\n    // *** PRIVATE ATTRIBUTES ***\n\n    this._context = context\n    this._nodes = new Map()\n    this._links = new Map()\n    this.id = CrochetStitch.COUNTER.next()\n\n    // validate call parameters\n    if (this.requiresPrevious() && attachToNode === null) throw new Error('crochetStitch : prev. stitch was required, but not provided')\n    if (attachToNode !== null && !(attachToNode instanceof CrochetNode)) throw new Error(`crochetStitch : attachToNode must be an instance o crochetNode. Got: ${attachToNode.constructor.name}`)\n    const loops = otherLoops.filter(e => (e instanceof CrochetNode)) // also a shallow copy\n    if (loops.length < this.requiredLoops()) throw new Error('crochetStitch: not enough other loops')\n\n    // setup stitch creation parameters\n    const seq = this.getSequence().split(';').map(e => e.trim())\n    const needle = []\n    needle.push(attachToNode)\n    let instr = ''\n    let subject = new OperationSubject(needle, this, loops)\n\n    // create the stitch'es nodes and links according to the dequence\n    instr = seq.shift()\n    while (instr) {\n      const tokens = instr.split(':').map(e => e.trim())\n      const action = tokens.shift()\n      const op = crochetOperationFactory.getNewObject(action, subject, tokens)\n      const res = op.exec()\n      subject = res.subject\n\n      if (res.newNode) this._nodes.set(res.newNode)\n      if (res.newLink) this._links.set(res.newLink)\n      if (res.delNode) {\n        res.delNode\n          .getNeighborLinks()\n          .forEach(e => {\n            e.apoptose()\n            this._links.delete(e)\n          })\n        this._nodes.delete(res.delNode)\n      }\n      if (res.delLink) this._links.delete(res.delLink)\n      instr = seq.shift()\n    }\n  }\n\n  // *** PUBLIC METHODS ***\n\n  // overrides the default .toString()\n  toString () {\n    return '[CrochetStitch ' + this._id + ']'\n  }\n\n  getNodes (nodeType = null) {\n    const nodes = Array\n      .from(this._nodes.keys())\n      .filter(e => (nodeType === null || e.getType() === nodeType))\n    return nodes\n  };\n\n  getLinks (linkType = null) {\n    const links = Array\n      .from(this._links.keys())\n      .filter(e => (linkType === null || e.getType() === linkType))\n    return links\n  };\n\n  getStartNode () {\n    return (this.getType() === 'origin') ? this.getNodes()[0] : this.getNodes('start')[0]\n  };\n\n  getEndNode () {\n    return (this.getType() === 'origin') ? this.getNodes()[0] : this.getNodes('finish')[0]\n  };\n\n  getPreviousStitch () {\n    return this.getStartNode.getNeighborNodes('in', 'finish').getContext()\n  }\n\n  getNextStitch () {\n    return this.getEndNode.getNeighborNodes('out', 'start').getContext()\n  }\n\n  getFirstLoop () {\n    let wrkNode = this.getStartNode() // start at the beginning\n    const sameStitch = this\n\n    while (wrkNode.getContext() === sameStitch) {\n      // if possible,  return a \"loop\" node\n      if (wrkNode.isLoopable()) return wrkNode\n      // otherwise, proceed to next node in main sequence\n      const nextStchs = wrkNode.getNeighborLinks('out', 'sequence')\n      if (nextStchs.length > 0) {\n        wrkNode = nextStchs[0].getOtherEnd(wrkNode)\n      } else {\n        return false // nothing was found :(\n      }\n    }\n\n    return false // nothing was found :(\n  }\n\n  getLastLoop () {\n    let wrkNode = this.getEndNode() // start at the beginning\n    const sameStitch = this\n\n    while (wrkNode.getContext() === sameStitch) {\n      // if possible,  return a \"loop\" node\n      if (wrkNode.isLoopable()) return wrkNode\n      // otherwise, proceed to next node in main sequence\n      const nextStchs = wrkNode.getNeighborLinks('in', 'sequence')\n      if (nextStchs.length > 0) {\n        wrkNode = nextStchs[0].getOtherEnd(wrkNode)\n      } else {\n        return false // nothing was found :(\n      }\n    }\n\n    return false // nothing was found :(\n  }\n\n  getNextLoop (currentLoop, forceProgress) {\n    // to do: add exception for chain spaces\n\n    let wrkNode = currentLoop // start somewhere\n    let cont = true\n\n    while (cont) {\n      // proceed to next node in main sequence\n      const nextStchs = wrkNode.getNeighborLinks('out', 'sequence')\n      if (nextStchs.length > 0) {\n        // if possible,  return a \"loop\" node\n        wrkNode = nextStchs[0]\n        if (wrkNode.isLoopable()) return wrkNode\n      } else {\n        // if no more nodes, stop the search\n        cont = false\n      }\n    }\n\n    return false // nothing was found :(\n  }\n}\n\nexport default CrochetStitch\n","import CrochetStitch from './crochetStitch.js'\n\nclass CrochetStitchOrigin extends CrochetStitch {\n  static getSequence () { return 'makeorigin' }\n  static getType () { return 'origin' }\n  static getDesc () { return 'first stitch in any doily. should be only one in the whole doily.' }\n  static requiresPrevious () { return false }\n  static requiredLoops () { return 0 }\n}\n\nexport default CrochetStitchOrigin\n","import CrochetStitch from './crochetStitch.js'\n\nclass CrochetStitchChain extends CrochetStitch {\n  static getSequence () { return 'mk:external:start;mk:sequence:finish' }\n  static getType () { return 'ch' }\n  static getDesc () { return 'simplest chain stitch' }\n  static requiresPrevious () { return true }\n  static requiredLoops () { return 0 }\n}\n\nexport default CrochetStitchChain\n","import CrochetStitch from './crochetStitch.js'\n\nclass CrochetStitchSingle extends CrochetStitch {\n  static getSequence () { return 'mk:external:start; mk:sequence:finish; mv:other; mk:external:hook; mk:default:loop; merge:right' }\n  static getType () { return 'sc' }\n  static getDesc () { return 'single crochet' }\n  static requiresPrevious () { return true }\n  static requiredLoops () { return 1 }\n}\n\nexport default CrochetStitchSingle\n","import CrochetStitch from './crochetStitch.js'\n\nclass CrochetStitchDouble extends CrochetStitch {\n  static getSequence () { return 'mk:external:start; mk:sequence:finish; mv:other; mk:external:hook; mk:default:loop; mk:default:hook; mk:default:loop; merge:right' }\n  static getType () { return 'dc' }\n  static getDesc () { return 'double crochet' }\n  static requiresPrevious () { return true }\n  static requiredLoops () { return 1 }\n}\n\nexport default CrochetStitchDouble\n","import CrochetStitch from './crochetStitch.js'\n\nclass CrochetStitchSlip extends CrochetStitch {\n  static getSequence () { return 'mk:external:start; mk:sequence:finish; mv:other; mk:external:hook; merge:right' }\n  static getType () { return 'slst' }\n  static getDesc () { return 'double crochet' }\n  static requiresPrevious () { return true }\n  static requiredLoops () { return 1 }\n}\n\nexport default CrochetStitchSlip\n","import FactoryClass from '../misc/factory.js'\nimport CrochetStitch from './crochetStitch.js'\n\nimport CrochetStitchOrigin from './crochetStitchOrigin.js'\nimport CrochetStitchChain from './crochetStitchChain.js'\nimport CrochetStitchSingle from './crochetStitchSingle.js'\nimport CrochetStitchDouble from './crochetStitchDouble.js'\nimport CrochetStitchSlip from './crochetStitchSlip.js'\n\nconst crochetStitchFactory = new FactoryClass(CrochetStitch, 'getType')\n\ncrochetStitchFactory\n  .registerClass(CrochetStitchOrigin)\n  .registerClass(CrochetStitchChain)\n  .registerClass(CrochetStitchSingle)\n  .registerClass(CrochetStitchDouble)\n  .registerClass(CrochetStitchSlip)\n\nexport default crochetStitchFactory\n","import crochetStitchFactory from '../stitchFactory.js'\nimport crochetNodeFactory from '../../nodes/nodeFactory.js'\n\nfunction crochetStitchDemo (log) {\n  let s, n, n2\n\n  n = crochetNodeFactory.getNewObject('start', 'stitch', [0, 0])\n  n = crochetNodeFactory.getNewObject('start', 'stitch', [0, 0])\n  s = crochetStitchFactory.getNewObject('default', 'doily', n)\n  log`*** default stitch ***`\n  log(`${s.id}`)\n  log(`${s.getSequence()}`)\n  log(`nodes : ${s.getNodes()}`)\n  log(`nodes : ${s.getLinks()}`)\n  log(`start : ${s.getStartNode()}`)\n  log(`end : ${s.getEndNode()}`)\n\n  log`*** origin stitch ***`\n  s = crochetStitchFactory.getNewObject('origin', 'doily')\n  log(`nodes : ${s.getNodes()}`)\n  log(`links : ${s.getLinks()}`)\n\n  log`*** chain stitch ***`\n\n  n = s.getLastLoop()\n  s = crochetStitchFactory.getNewObject('ch', 'doily', n)\n  log(`nodes : ${s.getNodes()}`)\n  log(`links : ${s.getLinks()}`)\n  log(`links : ${s.getLinks().map(e => (e.source.id + ' -> ' + e.target.id + '(' + e.getType() + ')'))}`)\n\n  n2 = s.getStartNode()\n  log(`start : ${n2.getType()} ${n2.id}`)\n  n2 = s.getEndNode()\n  log(`end : ${n2.getType()} ${n2.id}`)\n  n2 = s.getFirstLoop()\n  log(`first loop : ${n2.getType()} ${n2.id}`)\n  n2 = s.getLastLoop()\n  log(`last loop : ${n2.getType()} ${n2.id}`)\n\n  log('*** single crochet  ***')\n\n  s = crochetStitchFactory.getNewObject('sc', 'doily', n2, [n])\n  log(`nodes : ${s.getNodes()}`)\n  log('links :')\n  s.getLinks().forEach(e => (\n    log(`    ${e.id} (${e.getType()}) : ${e.source.id} -> ${e.target.id}`)\n  ))\n\n  log('*** double crochet  ***')\n\n  s = crochetStitchFactory.getNewObject('dc', 'doily', n2, [n])\n  log(`nodes : ${s.getNodes()}`)\n  log('links :')\n  s.getLinks().forEach(e => (\n    log(`    ${e.id} (${e.getType()}) : ${e.source.id} -> ${e.target.id}`)\n  ))\n\n  log('*** slip stitch  ***')\n\n  s = crochetStitchFactory.getNewObject('slst', 'doily', n2, [n])\n  log(`nodes : ${s.getNodes()}`)\n  log('links :')\n  s.getLinks().forEach(e => (\n    log(`    ${e.id} (${e.getType()}) : ${e.source.id} -> ${e.target.id}`)\n  ))\n}\n\nexport default crochetStitchDemo\n","import { render } from \"./Demo.vue?vue&type=template&id=3ac972f4\"\nimport script from \"./Demo.vue?vue&type=script&lang=js\"\nexport * from \"./Demo.vue?vue&type=script&lang=js\"\n\nimport \"./Demo.vue?vue&type=style&index=0&id=3ac972f4&lang=css\"\nscript.render = render\n\nexport default script","import { createApp } from 'vue'\nimport Demo from './Demo.vue'\nimport './registerServiceWorker'\n\ncreateApp(Demo).mount('#app')\n","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Demo.vue?vue&type=style&index=0&id=3ac972f4&lang=css\"","/* eslint-disable no-console */\n\nimport { register } from 'register-service-worker'\n\nif (process.env.NODE_ENV === 'production') {\n  register(`${process.env.BASE_URL}service-worker.js`, {\n    ready () {\n      console.log(\n        'App is being served from cache by a service worker.\\n' +\n        'For more details, visit https://goo.gl/AFskqB'\n      )\n    },\n    registered () {\n      console.log('Service worker has been registered.')\n    },\n    cached () {\n      console.log('Content has been cached for offline use.')\n    },\n    updatefound () {\n      console.log('New content is downloading.')\n    },\n    updated () {\n      console.log('New content is available; please refresh.')\n    },\n    offline () {\n      console.log('No internet connection found. App is running in offline mode.')\n    },\n    error (error) {\n      console.error('Error during service worker registration:', error)\n    }\n  })\n}\n"],"sourceRoot":""}